openapi: 3.0.0
info:
  title: Login (Auth)
  version: '1.0'
servers:
  - url: 'https://mindverse-backend.herokuapp.com'
    description: Mindverse backend server
paths:
  /auth/local:
    parameters: []
    post:
      summary: ''
      operationId: post-auth-local
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  jwt:
                    type: string
                    minLength: 1
                  user:
                    type: object
                    required:
                      - id
                      - username
                      - email
                      - provider
                      - role
                      - created_at
                      - updated_at
                    properties:
                      id:
                        type: number
                      username:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      provider:
                        type: string
                        minLength: 1
                      confirmed: {}
                      blocked: {}
                      role:
                        type: object
                        required:
                          - id
                          - name
                          - description
                          - type
                        properties:
                          id:
                            type: number
                          name:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                          type:
                            type: string
                            minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                required:
                  - jwt
                  - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                password:
                  type: string
        description: Identifier can be eithher username or email
      description: User login with authenticated access.
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
